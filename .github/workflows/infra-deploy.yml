name: Infrastructure Deployment

on:
  push:
    branches:
      - main # Trigger when pushing to main branch
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        run: |
          echo "Configuring AWS credentials..."
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          if [ -n "${{ secrets.AWS_SESSION_TOKEN }}" ]; then
            aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          fi
      - name: Terraform Init
        run: terraform init -backend-config="bucket=infra-project-terraform-state-bucket"
        working-directory: terraform
      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform
      - name: Terraform Format Check
        run: |
          terraform fmt -recursive
          terraform fmt -check
        working-directory: terraform
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: terraform
      - name: Update Inventory JSON
        run: |
          terraform output -json > $GITHUB_WORKSPACE/ansible/inventory.json
          cat $GITHUB_WORKSPACE/ansible/inventory.json
        working-directory: terraform
      - name: Upload Inventory JSON
        uses: actions/upload-artifact@v4
        with:
          name: inventory
          path: ansible/inventory.json

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible
      - name: Download Inventory JSON
        uses: actions/download-artifact@v4
        with:
          name: inventory
          path: ansible
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/trojan.pem
          chmod 600 ~/.ssh/trojan.pem
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/trojan.pem
      - name: Retrieve DB Password from AWS Secrets Manager
        run: |
          echo "DB_PASSWORD=$(aws secretsmanager get-secret-value --secret-id ${{ secrets.DB_PASSWORD_SECRET_ARN }} --query 'SecretString' --output text)" >> $GITHUB_ENV

      - name: Run Ansible Playbook
        run: |
          cat ansible/inventory.json    
          ansible-playbook -i inventory.json webserver.yml
        working-directory: ansible
      - name: Install MySQL Client
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install pymysql mysqlclient
      - name: Create Database
        run: |
          mysql -h "${{ env.DB_HOST }}" -u admin -p"${{ env.DB_PASSWORD }}" -e "CREATE DATABASE IF NOT EXISTS retaildb;"
      - name: Increase Connection Limit
        run: |
          mysql -h "${{ env.DB_HOST }}" -u admin -p"${{ env.DB_PASSWORD }}" -e "SET GLOBAL max_connections = 200;"
